// запуск игры
// скрипт размещает корабль
// начало боя
// повторяем действия: запрос у пользователя координат, сравнение с положением корабля
// игра окончена, выводим оценку
/*
ЦИКЛ: пока корабль не потоплен
	ПОЛУЧИТЬ координаты выстрела от пользователя
	СРАВНИТЬ введенные данные с диапазоном корректных значений
	ЕСЛИ введенные данные некорректны,
		ВЫВЕСТИ сообщение с предложением ввести правильное число
	ИНАЧЕ
		ПРИБАВИТЬ один к guesses
		ЕСЛИ выстрел попал в корабль
			ПРИБАВИТЬ один к количеству попаданий
			ЕСЛИ количество попаданий равно трем
				ПРИСВОИТЬ isSunk значение true
				ВЫВЕСТИ сообщение «Корабль потоплен!»
			КОНЕЦ ЕСЛИ
		КОНЕЦ ЕСЛИ
	КОНЕЦ ИНАЧЕ
КОНЕЦ ЦИКЛА
ВЫВЕСТИ статистику
*/

// var deck1 = 4
// var deck2 = 5
// var deck3 = 6
// var deck4 = 7
// var deck5 = 8

// var coordinate;
// var hits = 0;
// var coordinates = 0;

// var isSunkShip = false;

// while(isSunkShip == false){
// 	coordinate = prompt ("Вы готовы выстрелить?(нажмите от 0 до 10):");
// 	if (coordinate < 0 || coordinate > 10){
// 		alert("Я просил Вас ввести координаты от 0 до 10")
// 	} else{
// 		coordinates = coordinates + 1;
// 		if(coordinate == deck1 || coordinate == deck2 || coordinate == deck3 || coordinate == deck4 || coordinate == deck5 ){
// 			hits = hits + 1;
// 			if (hits == 5){
// 				isSunkShip = true;
// 				alert("Поздравляю Вы победили!");
// 			}
// 		} else{
// 			alert("Мимо!")
// 		}
// 	}

// }

var mine1 = 2
var mine2 = 4
var mine3 = 6
var mine4 = 9

var position;
var hits = 0
var positions = 0

var detonation = false;

while(detonation == false){
	position = prompt ("Вы готовы подорвать? Если - да, укажите число от 0 до 10");
	if(position < 0 || position > 10){
		alert("Я просил Вас указать число от 0 до 10!!!")
	} else{
		positions = positions + 1;
		if( position == mine1 || position == mine2 || position == mine3 || position == mine4 ){
			hits = hits + 1;
			if (hits == 4){
				detonation = true;
				alert("ПОДРЫВ!!!");
				alert("Поздравляю!")
				}
				else{
					alert("Промах!")
				}
		}
		
	}
}







/*
Булевские операторы используются в логических выражениях, результатом которых 
является значение true или false. Булевские операторы делятся на два вида: 
операторы сравнения и логические операторы.

Операторы сравнения
Операторы сравнения сопоставляют
два значения:
<> “меньше” “больше”
== “равно”
=== “в точности равно” (мы еще вернемся к этому оператору!)
<= “меньше либо равно”
>= “больше либо равно”
!= “не равно”

Логические операторы
Логические операторы объединяют два булевских выражения и создают
один результат true или false. Два важнейших логических оператора:
|| ИЛИ. Результат будет истинным, если истинно хотя бы одно из двух выражений.

&& И. Результат будет истинным, если истинны оба выражения.

Еще один логический оператор — НЕ — применяется к одному булевскому выражению 
(вместо двух):
! НЕ. Результат будет истинным, если выражение ложно.
*/
